language: 
  - cpp
compiler:
  - gcc

before_install:
# - sudo add-apt-repository --yes ppa:ubuntu-sdk-team/ppa
# - sudo apt-get update -qq
# - sudo apt-get install qtbase5-dev qtdeclarative5-dev libqt5webkit5-dev libsqlite3-dev
# - sudo apt-get install qt5-default qttools5-dev-tools

 - sudo add-apt-repository "deb http://archive.ubuntu.com/ubuntu trusty universe"
 - sudo add-apt-repository "deb http://archive.ubuntu.com/ubuntu trusty main"
 - sudo add-apt-repository --yes ppa:ubuntu-toolchain-r/test
 - sudo add-apt-repository --yes ppa:kalakris/cmake
 - sudo apt-get -qq update
 - sudo apt-get -qq install g++-4.8
 - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.8 90
 - sudo apt-get -qq install cmake
 - sudo apt-get -qq install qdbus qmlscene qt5-default qt5-qmake qtbase5-dev-tools qtchooser qtdeclarative5-dev xbitmaps xterm libqt5svg5-dev qttools5-dev qtscript5-dev qtdeclarative5-folderlistmodel-plugin qtdeclarative5-controls-plugin -y
 - sudo apt-get install libboost-all-dev

install:

# OpenCV v3.0.0 (beta) install code (modified from orignal source: https://github.com/jayrambhia/Install-OpenCV)

  # OpenCV dependencies - Details available at: http://docs.opencv.org/trunk/doc/tutorials/introduction/linux_install/linux_install.html
  - sudo apt-get install -y build-essential
  - sudo apt-get install -y cmake git libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev
  - sudo apt-get install -y python-dev python-numpy libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev libdc1394-22-dev

  # Download v3.0.0 .zip file and extract.
#  - curl -sL https://github.com/Itseez/opencv/archive/3.0.0-beta.zip > opencv.zip
#  - unzip opencv.zip
#  - cd opencv-3.0.0-beta

#  - git clone https://github.com/Itseez/opencv_contrib.git

  - mkdir opencv_lib && cd opencv_lib

  - git clone https://github.com/Itseez/opencv.git

  - git clone https://github.com/itseez/opencv_contrib

  - cd opencv

  # Create a new 'build' folder.
  - mkdir build
  - cd build

  # Set build instructions for Ubuntu distro.
#  - cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local -D OPENCV_EXTRA_MODULES_PATH=../opencv_contrib/modules -D WITH_TBB=ON -D WITH_V4L=ON -D WITH_QT=ON -D WITH_OPENGL=ON ..

  - cmake -D OPENCV_EXTRA_MODULES_PATH=../../opencv_contrib/modules/ -DBUILD_TIFF=ON -DBUILD_opencv_java=OFF -DWITH_CUDA=OFF -DENABLE_AVX=ON -DWITH_OPENGL=ON -DWITH_OPENCL=ON -DWITH_IPP=ON -DWITH_TBB=ON -DWITH_EIGEN=ON -DWITH_V4L=ON -DBUILD_TESTS=OFF -DBUILD_PERF_TESTS=OFF -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=$(python3 -c "import sys; print(sys.prefix)") -DPYTHON_EXECUTABLE=$(which python3) -DPYTHON_INCLUDE_DIR=$(python3 -c "from distutils.sysconfig import get_python_inc; print(get_python_inc())") -DPYTHON_PACKAGES_PATH=$(python3 -c "from distutils.sysconfig import get_python_lib; print(get_python_lib())") ..

  # Run 'make' with four threads.
  - make -j4

  # Install to OS.
  - sudo make install

  # Add configuration to OpenCV to tell it where the library files are located on the file system (/usr/local/lib)
  - sudo sh -c 'echo "/usr/local/lib" > /etc/ld.so.conf.d/opencv.conf'

  - sudo ldconfig
  - echo "OpenCV installed."

  # We need to return to the repo "root" folder, so we can then 'cd' into the C++ project folder.
  - cd ../../../

  # Clone json and googletest
  - cd Code/BP_framework/Framework/lib/
  - git clone https://github.com/nlohmann/json.git
  - cd json
  - cmake .
  - make
  - ./json_unit
  - cd ../../../Framework_test/lib/
  - git clone https://github.com/google/googletest.git
  - cd ../../../../

script:
  - pwd
  - mkdir testBuild && cd testBuild
  - cmake ../Code/BP_framework
  - make
  - cd ../Code/BP_framework/Framework_test/data
  - ./../../../testBuild/Framework_test/runTests
  - pwd
  - ls -la
